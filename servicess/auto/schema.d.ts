/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/wechatmini/v1/homepage/banners": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Homepage Banner List */
        get: operations["get_homepage_banner_list_api_wechatmini_v1_homepage_banners_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/wechatmini/v1/jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Job List */
        get: operations["get_job_list_api_wechatmini_v1_jobs_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/wechatmini/v1/job/{job_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Job Detail */
        get: operations["get_job_detail_api_wechatmini_v1_job__job_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** BannerRead */
        BannerRead: {
            type: components["schemas"]["BannerType"];
            /** Image Url */
            image_url: string;
            /** Click Url */
            click_url: string;
        };
        /**
         * BannerType
         * @enum {string}
         */
        BannerType: "wechatmini_inner" | "other_url";
        /**
         * EmploymentType
         * @enum {string}
         */
        EmploymentType: "full_time" | "part_time" | "contractor";
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** JobDetail */
        JobDetail: {
            /** Content */
            content: string;
        };
        /** JobListResponse */
        JobListResponse: {
            /** Jobs */
            jobs: components["schemas"]["JobWithoutDetail"][];
            page_info: components["schemas"]["PageInfo"];
        };
        /**
         * JobStatus
         * @enum {string}
         */
        JobStatus: "created" | "published" | "suspended" | "terminated" | "hidden" | "deleted";
        /** JobWithDetail */
        JobWithDetail: {
            /**
             * Create At
             * Format: date-time
             */
            create_at: string;
            /**
             * Update At
             * Format: date-time
             */
            update_at: string;
            status: components["schemas"]["JobStatus"];
            /** Title */
            title: string;
            region: components["schemas"]["Region"];
            employment_type: components["schemas"]["EmploymentType"];
            work_arrangement: components["schemas"]["WorkArrangement"];
            /** Id */
            id: number;
            detail: components["schemas"]["JobDetail"] | null;
        };
        /** JobWithoutDetail */
        JobWithoutDetail: {
            /**
             * Create At
             * Format: date-time
             */
            create_at: string;
            /**
             * Update At
             * Format: date-time
             */
            update_at: string;
            status: components["schemas"]["JobStatus"];
            /** Title */
            title: string;
            region: components["schemas"]["Region"];
            employment_type: components["schemas"]["EmploymentType"];
            work_arrangement: components["schemas"]["WorkArrangement"];
            /** Id */
            id: number;
        };
        /** PageInfo */
        PageInfo: {
            /** Total */
            total: number;
            /** Pages */
            pages: number;
            /** Page */
            page: number;
            /** Page Size */
            page_size: number;
        };
        /**
         * Region
         * @enum {string}
         */
        Region: "north_america" | "latin_america" | "asia_pacific" | "europe" | "mid_east";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * WorkArrangement
         * @enum {string}
         */
        WorkArrangement: "on_site" | "remote" | "hybrid";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_homepage_banner_list_api_wechatmini_v1_homepage_banners_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BannerRead"][];
                };
            };
        };
    };
    get_job_list_api_wechatmini_v1_jobs_get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                area?: components["schemas"]["Region"] | null;
                employment_type?: components["schemas"]["EmploymentType"] | null;
                work_arrangement?: components["schemas"]["WorkArrangement"] | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobListResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_job_detail_api_wechatmini_v1_job__job_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                job_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobWithDetail"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
